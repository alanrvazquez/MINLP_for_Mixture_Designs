GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows 06/13/19 10:48:32 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option limrow=0;
   2  * 'number of cases output in the LST file for each named var.'
   3  option limcol=0;
   4  * # number of decimals being displayed in the output
   5  option decimals=8;
   6  * # lmit time: 4 hours for NEOS
   7  option reslim=14400;
   8   
   9  * # Force a compilation error if GAMS Rev 240 or higher is not used
  11   
  12  * Definitions:
  13  * ------------
  14  * Number of parameters
  18  * Data sets:
  19  * ----------
  20  SET      np      'number of support points'      /1*7/;
  21  SET      nth     'number of parameters'          /1*3/;
  22  SET      nv      'number of variables'           /1*3/;
  23  alias(np1,np);
  24  alias(nth1,nth2, nth);
  25   
  26  * Parameters:
  27  *------------
  28  PARAMETER        npz             'number of design points',
  29                   Ring(nv)        'Ingredient availability.'
  30                   lambda          'Amount of mixture for one experimental r
      un'
  31                   BigM            'limit'
  32                   par(np)         'parameters - local values';
  33  Ring('1')        =       1.5;
  34  Ring('2')        =       3.0;
  35  Ring('3')        =       3.0;
  36  lambda           =       1;
  37  npz              =       card(np);
  38  BigM             =       npz;
  39   
  40  * Variables:
  41  *-----------
  42  VARIABLES
  43  x(nv,np)         'variable x - positions of the design points',
  44  dif_th(nth,np)   'model matrix columns',
  45  fim_th(nth,nth)  'Fisher Information Matrix (FIM)'
  46  lm(nth,nth)      'matrix L, for Cholesky decomposition'
  47  detA             'determinant'
  48  z(nv,np)         'variable z - products of binary and continuous variables
      '
  49   
  50   
  51  * Binary Variables:
  52  BINARY VARIABLES
  53  y(np) 'variables y - decision of including design point or not';
  54   
  55  EQUATIONS
  56  vec_fim1(np)           'parameter column',
  57  vec_fim2(np)           'parameter column',
  58  vec_fim3(np)           'parameter column',
  59   
  60  mat_fim(nth,nth)       'terms of the FIM after summing'
  61   
  62  * eq for D-optimality
  63  eq_l(nth,nth)          'terms of L matrix'
  64  eq_u1(nth,nth)         'terms of L matrix =0'
  65  chol_sta(nth,nth)      'Cholesky factorization stability criteria'
  66  symm_fim(nth,nth)      'Symmetry of the FIM'
  67   
  68  * eq for mixtures
  69  const_mixt(np)         'constraints on mixtures'
  70  ing_avail(nv)         'ingredient availability constraints'
  71   
  72  * eq for linearizing quadratic constraint (ingredient availability const.)
  73  lin_iav_1(nv, np)        'linearization of ingredient availability const.'
  74  lin_iav_2(nv, np)
  75  lin_iav_3(nv, np)
  76   
  77  * others
  78  ord_nw(np)             'ordering points constraint'
  79  est_model1         'model must be estimable'
  80  est_model2         'model must be estimable'
  81  est_model3         'model must be estimable'
  82  ord_x(np)              'ordering of the proportions of the ingredients'
  83  eq_det                 'determinant computation - D-optimality'
  84  ;
  85   
  86  * Equations:
  87  *-----------
  88  * specify model matrix.
  89  vec_fim1(np)  ..       dif_th('1',np) =e=   x('1',np);
  90  vec_fim2(np)  ..       dif_th('2',np) =e=   x('2',np);
  91  vec_fim3(np)  ..       dif_th('3',np) =e=   x('3',np);
  92   
  93  * FIM
  94  mat_fim(nth,nth1).. fim_th(nth, nth1) =e=
  95    sum[np,(y(np)/npz)*dif_th(nth, np)*dif_th(nth1, np)];
  96   
  97  * Symmetry of FIM
  98  symm_fim(nth,nth1)$(nth.ord lt nth1.ord).. fim_th(nth,nth1) =e= fim_th(nth
      1,nth);
  99   
 100  * Cholesky L*L^T decomposition for A- and D-optimality
 101  eq_l(nth,nth1)$(nth.ord ge nth1.ord).. fim_th(nth,nth1)  =e=
 102    sum[nth2,lm(nth,nth2)*lm(nth1,nth2)];
 103  eq_u1(nth,nth1)$(nth.ord lt nth1.ord).. lm(nth,nth1) =e= 0;
 104   
 105  * Condition for numerical stability in Cholesky factorization
 106  chol_sta(nth,nth).. fim_th(nth,nth) =g= sum[nth1$(nth1.ord lt nth.ord),sqr
      [lm(nth,nth1)]];
 107   
 108  * Mixture runs must sum to one
 109  const_mixt(np) .. sum[nv, x(nv,np)] =e= 1;
 110   
 111  * Ingredient availability constraints
 112  *ing_avail(nv) .. sum[np, lambda*y(np)*x(nv,np)] =l= Ring(nv);
 113  ing_avail(nv) .. sum[np, lambda*z(nv,np)] =l= Ring(nv);
 114  lin_iav_1(nv, np) .. z(nv,np) =l= y(np);
 115  lin_iav_2(nv, np) .. z(nv,np) =l= x(nv,np);
 116  lin_iav_3(nv, np) .. z(nv,np) =g= x(nv,np) - (1 - y(np));
 117   
 118   
 119  * ordering constraint
 120  ord_nw(np)$(np.ord gt 1).. y(np) =l= y(np-1);
 121   
 122  * Model must be estimable
 123  est_model1 .. y('1') =e= 1;
 124  est_model2 .. y('2') =e= 1;
 125  est_model3 .. y('3') =e= 1;
 126   
 127  * ordering first component constraint
 128  ord_x(np)$(np.ord gt 1).. x('1',np) =g= x('1',np-1);
 129   
 130  * equation for det. computation - for D-optimality
 131  eq_det.. detA =e= sum[nth, log[lm(nth,nth)]];
 132   
 133  * problem
 134  model COMMON /vec_fim1, vec_fim2, vec_fim3, ord_x, est_model1, est_model2,
       est_model3
 135                mat_fim, symm_fim, eq_l, eq_u1, chol_sta, ing_avail, ord_nw,
 136                const_mixt, lin_iav_1, lin_iav_2, lin_iav_3/;
 137  * model for D-optimal designs
 138  model D_opt /COMMON,eq_det/;
 139   
 140  * parameters for solving
 141  * Absolute gap: best_estimate - best_integer
 142  option optcr = 1.0e-5;
 143  * Relative gap
 144  option optca = 1.0e-6;
 145  option iterlim = 2000000000;
 146  * maximum number of domain errors for a nonlinear solver.
 147  option domlim = 1000;
 148  option rminlp = conopt4;
 149  option minlp = scip;
 150  *option nlp = ipopt;
 151  * basis acceptance threshold.
 152  option bratio = 1;
 153  option decimals = 8;
 154  D_opt.optfile = 1;
 155   
 156  * initial values
 157  $macro ResetboundsOnYforD
 158  x.lo('1',np)            =       0.0;
 159  x.lo('2',np)            =       0.0;
 160  x.lo('3',np)            =       0.0;
 161  x.up('1',np)            =       1.0;
 162  x.up('2',np)            =       1.0;
 163  x.up('3',np)            =       1.0;
 164   
 165  * Product variables
 166  z.lo('1',np)            =       0.0;
 167  z.lo('2',np)            =       0.0;
 168  z.lo('3',np)            =       0.0;
 169  z.up('1',np)            =       1.0;
 170  z.up('2',np)            =       1.0;
 171  z.up('3',np)            =       1.0;
 172   
 173  * Input initial design.
 174  *parameters Dguess(nv, np), yguess(np), Lguess(nth,nth1);
 175  *$gdxin 'in.gdx'
 176  *$load Dguess, yguess, Lguess
 177  *$gdxin
 178  *;
 179  *x.l(nv,np) = Dguess(nv,np);
 180  *y.l(np)       =      yguess(np);
 181   
 182  * Initial parameters and bounds
 183  dif_th.lo(nth,np1)      =       -0.1;
 184  dif_th.up(nth,np1)      =       1.1;
 185  *dif_th.l('1',np)        =       x.l('1',np);
 186  *dif_th.l('2',np)        =       x.l('2',np);
 187  *dif_th.l('3',np)        =       x.l('3',np);;
 188  *dif_th.l('4',np)        =       x.l('1',np)*x.l('2',np);
 189  *dif_th.l('5',np)        =       x.l('1',np)*x.l('3',np);
 190  *dif_th.l('6',np)        =       x.l('2',np)*x.l('3',np);
 191   
 192  fim_th.lo(nth, nth1)    =       -0.1;
 193  fim_th.up(nth, nth1)    =       1.1;
 194  *fim_th.l(nth,nth1)      =       sum(np, (y.l(np)/npz)*
 195  *                                dif_th.l(nth, np)*dif_th.l(nth1,np));
 196   
 197  * initialization for D-optimality
 198  lm.lo(nth,nth1)         =       -1;
 199  lm.lo(nth,nth)          =       1.0e-5;
 200  lm.up(nth,nth1)         =       1;
 201  *lm.l(nth,nth1)          =       Lguess(nth,nth1);
 202   
 203   
 204  detA.lo = -50.0;
 205  detA.up = 50.0;
 206   
 207  D_opt.scaleopt = 1;
 208   
 209  *parameters Xinit(nv,np), LforAinit(nth,nth);
 210  *Xinit(nv,np) = x.l(nv,np);
 211  *LforAinit(nth,nth1) = lm.l(nth,nth1);
 212  *execute_unload 'check_initial.gdx' Xinit, LforAinit;
 213   
 214  * saving results
 215  parameters
 216  xsol(nv, np)         'save solutions for points for all 3 criteria',
 217  nsol(np)             'save solutions for n for all 3 criteria',
 218  opt                  'save optimal value'
 219  modelstat            'save the status of the model'
 220  time                 'save the CPU time'
 221  *Lsol(nth,nth)        'save L matrix, Cholesky'
 222   
 223  * solution for D-optimality
 224  option limrow = 10000 ;
 225  solve D_opt using minlp maximizing detA;
 226  xsol(nv, np)        =       x.l(nv, np);
 227  nsol(np)            =       y.l(np);
 228  opt                 =       detA.l;
 229  modelstat           =       D_opt.modelstat;
 230  time                =       D_opt.resusd;
 231  *Lsol(nth,nth1)      =       lm.l(nth,nth1);
 232   
 233  *execute_unload 'check_optimal.gdx' xsol, nsol, Lsol;


COMPILATION TIME     =        0.000 SECONDS
      3 MB  25.1.3 r4e34d435fbd WEX-WEI
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows 06/13/19 10:48:32 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE D_opt Using MINLP From line 225


---- vec_fim1  =E=  parameter column

vec_fim1(1)..  - x(1,1) + dif_th(1,1) =E= 0 ; (LHS = 0)
     
vec_fim1(2)..  - x(1,2) + dif_th(1,2) =E= 0 ; (LHS = 0)
     
vec_fim1(3)..  - x(1,3) + dif_th(1,3) =E= 0 ; (LHS = 0)
     
vec_fim1(4)..  - x(1,4) + dif_th(1,4) =E= 0 ; (LHS = 0)
     
vec_fim1(5)..  - x(1,5) + dif_th(1,5) =E= 0 ; (LHS = 0)
     
vec_fim1(6)..  - x(1,6) + dif_th(1,6) =E= 0 ; (LHS = 0)
     
vec_fim1(7)..  - x(1,7) + dif_th(1,7) =E= 0 ; (LHS = 0)
     

---- vec_fim2  =E=  parameter column

vec_fim2(1)..  - x(2,1) + dif_th(2,1) =E= 0 ; (LHS = 0)
     
vec_fim2(2)..  - x(2,2) + dif_th(2,2) =E= 0 ; (LHS = 0)
     
vec_fim2(3)..  - x(2,3) + dif_th(2,3) =E= 0 ; (LHS = 0)
     
vec_fim2(4)..  - x(2,4) + dif_th(2,4) =E= 0 ; (LHS = 0)
     
vec_fim2(5)..  - x(2,5) + dif_th(2,5) =E= 0 ; (LHS = 0)
     
vec_fim2(6)..  - x(2,6) + dif_th(2,6) =E= 0 ; (LHS = 0)
     
vec_fim2(7)..  - x(2,7) + dif_th(2,7) =E= 0 ; (LHS = 0)
     

---- vec_fim3  =E=  parameter column

vec_fim3(1)..  - x(3,1) + dif_th(3,1) =E= 0 ; (LHS = 0)
     
vec_fim3(2)..  - x(3,2) + dif_th(3,2) =E= 0 ; (LHS = 0)
     
vec_fim3(3)..  - x(3,3) + dif_th(3,3) =E= 0 ; (LHS = 0)
     
vec_fim3(4)..  - x(3,4) + dif_th(3,4) =E= 0 ; (LHS = 0)
     
vec_fim3(5)..  - x(3,5) + dif_th(3,5) =E= 0 ; (LHS = 0)
     
vec_fim3(6)..  - x(3,6) + dif_th(3,6) =E= 0 ; (LHS = 0)
     
vec_fim3(7)..  - x(3,7) + dif_th(3,7) =E= 0 ; (LHS = 0)
     

---- ord_x  =G=  ordering of the proportions of the ingredients

ord_x(2)..  - x(1,1) + x(1,2) =G= 0 ; (LHS = 0)
     
ord_x(3)..  - x(1,2) + x(1,3) =G= 0 ; (LHS = 0)
     
ord_x(4)..  - x(1,3) + x(1,4) =G= 0 ; (LHS = 0)
     
ord_x(5)..  - x(1,4) + x(1,5) =G= 0 ; (LHS = 0)
     
ord_x(6)..  - x(1,5) + x(1,6) =G= 0 ; (LHS = 0)
     
ord_x(7)..  - x(1,6) + x(1,7) =G= 0 ; (LHS = 0)
     

---- est_model1  =E=  model must be estimable

est_model1..  y(1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- est_model2  =E=  model must be estimable

est_model2..  y(2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- est_model3  =E=  model must be estimable

est_model3..  y(3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- mat_fim  =E=  terms of the FIM after summing

mat_fim(1,1)..  (0)*dif_th(1,1) + (0)*dif_th(1,2) + (0)*dif_th(1,3)
     
      + (0)*dif_th(1,4) + (0)*dif_th(1,5) + (0)*dif_th(1,6) + (0)*dif_th(1,7)
     
      + fim_th(1,1) + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5)
     
      + (0)*y(6) + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(1,2)..  (0)*dif_th(1,1) + (0)*dif_th(1,2) + (0)*dif_th(1,3)
     
      + (0)*dif_th(1,4) + (0)*dif_th(1,5) + (0)*dif_th(1,6) + (0)*dif_th(1,7)
     
      + (0)*dif_th(2,1) + (0)*dif_th(2,2) + (0)*dif_th(2,3) + (0)*dif_th(2,4)
     
      + (0)*dif_th(2,5) + (0)*dif_th(2,6) + (0)*dif_th(2,7) + fim_th(1,2)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(1,3)..  (0)*dif_th(1,1) + (0)*dif_th(1,2) + (0)*dif_th(1,3)
     
      + (0)*dif_th(1,4) + (0)*dif_th(1,5) + (0)*dif_th(1,6) + (0)*dif_th(1,7)
     
      + (0)*dif_th(3,1) + (0)*dif_th(3,2) + (0)*dif_th(3,3) + (0)*dif_th(3,4)
     
      + (0)*dif_th(3,5) + (0)*dif_th(3,6) + (0)*dif_th(3,7) + fim_th(1,3)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(2,1)..  (0)*dif_th(1,1) + (0)*dif_th(1,2) + (0)*dif_th(1,3)
     
      + (0)*dif_th(1,4) + (0)*dif_th(1,5) + (0)*dif_th(1,6) + (0)*dif_th(1,7)
     
      + (0)*dif_th(2,1) + (0)*dif_th(2,2) + (0)*dif_th(2,3) + (0)*dif_th(2,4)
     
      + (0)*dif_th(2,5) + (0)*dif_th(2,6) + (0)*dif_th(2,7) + fim_th(2,1)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(2,2)..  (0)*dif_th(2,1) + (0)*dif_th(2,2) + (0)*dif_th(2,3)
     
      + (0)*dif_th(2,4) + (0)*dif_th(2,5) + (0)*dif_th(2,6) + (0)*dif_th(2,7)
     
      + fim_th(2,2) + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5)
     
      + (0)*y(6) + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(2,3)..  (0)*dif_th(2,1) + (0)*dif_th(2,2) + (0)*dif_th(2,3)
     
      + (0)*dif_th(2,4) + (0)*dif_th(2,5) + (0)*dif_th(2,6) + (0)*dif_th(2,7)
     
      + (0)*dif_th(3,1) + (0)*dif_th(3,2) + (0)*dif_th(3,3) + (0)*dif_th(3,4)
     
      + (0)*dif_th(3,5) + (0)*dif_th(3,6) + (0)*dif_th(3,7) + fim_th(2,3)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(3,1)..  (0)*dif_th(1,1) + (0)*dif_th(1,2) + (0)*dif_th(1,3)
     
      + (0)*dif_th(1,4) + (0)*dif_th(1,5) + (0)*dif_th(1,6) + (0)*dif_th(1,7)
     
      + (0)*dif_th(3,1) + (0)*dif_th(3,2) + (0)*dif_th(3,3) + (0)*dif_th(3,4)
     
      + (0)*dif_th(3,5) + (0)*dif_th(3,6) + (0)*dif_th(3,7) + fim_th(3,1)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(3,2)..  (0)*dif_th(2,1) + (0)*dif_th(2,2) + (0)*dif_th(2,3)
     
      + (0)*dif_th(2,4) + (0)*dif_th(2,5) + (0)*dif_th(2,6) + (0)*dif_th(2,7)
     
      + (0)*dif_th(3,1) + (0)*dif_th(3,2) + (0)*dif_th(3,3) + (0)*dif_th(3,4)
     
      + (0)*dif_th(3,5) + (0)*dif_th(3,6) + (0)*dif_th(3,7) + fim_th(3,2)
     
      + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5) + (0)*y(6)
     
      + (0)*y(7) =E= 0 ; (LHS = 0)
     
mat_fim(3,3)..  (0)*dif_th(3,1) + (0)*dif_th(3,2) + (0)*dif_th(3,3)
     
      + (0)*dif_th(3,4) + (0)*dif_th(3,5) + (0)*dif_th(3,6) + (0)*dif_th(3,7)
     
      + fim_th(3,3) + (0)*y(1) + (0)*y(2) + (0)*y(3) + (0)*y(4) + (0)*y(5)
     
      + (0)*y(6) + (0)*y(7) =E= 0 ; (LHS = 0)
     

---- symm_fim  =E=  Symmetry of the FIM

symm_fim(1,2)..  fim_th(1,2) - fim_th(2,1) =E= 0 ; (LHS = 0)
     
symm_fim(1,3)..  fim_th(1,3) - fim_th(3,1) =E= 0 ; (LHS = 0)
     
symm_fim(2,3)..  fim_th(2,3) - fim_th(3,2) =E= 0 ; (LHS = 0)
     

---- eq_l  =E=  terms of L matrix

eq_l(1,1)..  fim_th(1,1) - (2E-5)*lm(1,1) + (0)*lm(1,2) + (0)*lm(1,3) =E= 0 ;
     
      (LHS = -1E-10, INFES = 1E-10 ****)
     
eq_l(2,1)..  fim_th(2,1) + (0)*lm(1,1) - (1E-5)*lm(1,2) + (0)*lm(1,3)
     
      - (1E-5)*lm(2,1) + (0)*lm(2,2) + (0)*lm(2,3) =E= 0 ; (LHS = 0)
     
eq_l(2,2)..  fim_th(2,2) + (0)*lm(2,1) - (2E-5)*lm(2,2) + (0)*lm(2,3) =E= 0 ;
     
      (LHS = -1E-10, INFES = 1E-10 ****)
     
eq_l(3,1)..  fim_th(3,1) + (0)*lm(1,1) + (0)*lm(1,2) - (1E-5)*lm(1,3)
     
      - (1E-5)*lm(3,1) + (0)*lm(3,2) + (0)*lm(3,3) =E= 0 ; (LHS = 0)
     
eq_l(3,2)..  fim_th(3,2) + (0)*lm(2,1) + (0)*lm(2,2) - (1E-5)*lm(2,3)
     
      + (0)*lm(3,1) - (1E-5)*lm(3,2) + (0)*lm(3,3) =E= 0 ; (LHS = 0)
     
eq_l(3,3)..  fim_th(3,3) + (0)*lm(3,1) + (0)*lm(3,2) - (2E-5)*lm(3,3) =E= 0 ;
     
      (LHS = -1E-10, INFES = 1E-10 ****)
     

---- eq_u1  =E=  terms of L matrix =0

eq_u1(1,2)..  lm(1,2) =E= 0 ; (LHS = 0)
     
eq_u1(1,3)..  lm(1,3) =E= 0 ; (LHS = 0)
     
eq_u1(2,3)..  lm(2,3) =E= 0 ; (LHS = 0)
     

---- chol_sta  =G=  Cholesky factorization stability criteria

chol_sta(1,1)..  fim_th(1,1) =G= 0 ; (LHS = 0)
     
chol_sta(2,2)..  fim_th(2,2) + (0)*lm(2,1) =G= 0 ; (LHS = 0)
     
chol_sta(3,3)..  fim_th(3,3) + (0)*lm(3,1) + (0)*lm(3,2) =G= 0 ; (LHS = 0)
     

---- ing_avail  =L=  ingredient availability constraints

ing_avail(1)..  z(1,1) + z(1,2) + z(1,3) + z(1,4) + z(1,5) + z(1,6) + z(1,7)
      =L= 1.5 ; (LHS = 0)
     
ing_avail(2)..  z(2,1) + z(2,2) + z(2,3) + z(2,4) + z(2,5) + z(2,6) + z(2,7)
      =L= 3 ; (LHS = 0)
     
ing_avail(3)..  z(3,1) + z(3,2) + z(3,3) + z(3,4) + z(3,5) + z(3,6) + z(3,7)
      =L= 3 ; (LHS = 0)
     

---- ord_nw  =L=  ordering points constraint

ord_nw(2)..  - y(1) + y(2) =L= 0 ; (LHS = 0)
     
ord_nw(3)..  - y(2) + y(3) =L= 0 ; (LHS = 0)
     
ord_nw(4)..  - y(3) + y(4) =L= 0 ; (LHS = 0)
     
ord_nw(5)..  - y(4) + y(5) =L= 0 ; (LHS = 0)
     
ord_nw(6)..  - y(5) + y(6) =L= 0 ; (LHS = 0)
     
ord_nw(7)..  - y(6) + y(7) =L= 0 ; (LHS = 0)
     

---- const_mixt  =E=  constraints on mixtures

const_mixt(1)..  x(1,1) + x(2,1) + x(3,1) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(2)..  x(1,2) + x(2,2) + x(3,2) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(3)..  x(1,3) + x(2,3) + x(3,3) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(4)..  x(1,4) + x(2,4) + x(3,4) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(5)..  x(1,5) + x(2,5) + x(3,5) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(6)..  x(1,6) + x(2,6) + x(3,6) =E= 1 ; (LHS = 0, INFES = 1 ****)
     
const_mixt(7)..  x(1,7) + x(2,7) + x(3,7) =E= 1 ; (LHS = 0, INFES = 1 ****)
     

---- lin_iav_1  =L=  linearization of ingredient availability const.

lin_iav_1(1,1)..  z(1,1) - y(1) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,2)..  z(1,2) - y(2) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,3)..  z(1,3) - y(3) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,4)..  z(1,4) - y(4) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,5)..  z(1,5) - y(5) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,6)..  z(1,6) - y(6) =L= 0 ; (LHS = 0)
     
lin_iav_1(1,7)..  z(1,7) - y(7) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,1)..  z(2,1) - y(1) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,2)..  z(2,2) - y(2) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,3)..  z(2,3) - y(3) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,4)..  z(2,4) - y(4) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,5)..  z(2,5) - y(5) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,6)..  z(2,6) - y(6) =L= 0 ; (LHS = 0)
     
lin_iav_1(2,7)..  z(2,7) - y(7) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,1)..  z(3,1) - y(1) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,2)..  z(3,2) - y(2) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,3)..  z(3,3) - y(3) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,4)..  z(3,4) - y(4) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,5)..  z(3,5) - y(5) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,6)..  z(3,6) - y(6) =L= 0 ; (LHS = 0)
     
lin_iav_1(3,7)..  z(3,7) - y(7) =L= 0 ; (LHS = 0)
     

---- lin_iav_2  =L=  

lin_iav_2(1,1)..  - x(1,1) + z(1,1) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,2)..  - x(1,2) + z(1,2) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,3)..  - x(1,3) + z(1,3) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,4)..  - x(1,4) + z(1,4) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,5)..  - x(1,5) + z(1,5) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,6)..  - x(1,6) + z(1,6) =L= 0 ; (LHS = 0)
     
lin_iav_2(1,7)..  - x(1,7) + z(1,7) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,1)..  - x(2,1) + z(2,1) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,2)..  - x(2,2) + z(2,2) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,3)..  - x(2,3) + z(2,3) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,4)..  - x(2,4) + z(2,4) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,5)..  - x(2,5) + z(2,5) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,6)..  - x(2,6) + z(2,6) =L= 0 ; (LHS = 0)
     
lin_iav_2(2,7)..  - x(2,7) + z(2,7) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,1)..  - x(3,1) + z(3,1) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,2)..  - x(3,2) + z(3,2) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,3)..  - x(3,3) + z(3,3) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,4)..  - x(3,4) + z(3,4) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,5)..  - x(3,5) + z(3,5) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,6)..  - x(3,6) + z(3,6) =L= 0 ; (LHS = 0)
     
lin_iav_2(3,7)..  - x(3,7) + z(3,7) =L= 0 ; (LHS = 0)
     

---- lin_iav_3  =G=  

lin_iav_3(1,1)..  - x(1,1) + z(1,1) - y(1) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,2)..  - x(1,2) + z(1,2) - y(2) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,3)..  - x(1,3) + z(1,3) - y(3) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,4)..  - x(1,4) + z(1,4) - y(4) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,5)..  - x(1,5) + z(1,5) - y(5) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,6)..  - x(1,6) + z(1,6) - y(6) =G= -1 ; (LHS = 0)
     
lin_iav_3(1,7)..  - x(1,7) + z(1,7) - y(7) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,1)..  - x(2,1) + z(2,1) - y(1) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,2)..  - x(2,2) + z(2,2) - y(2) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,3)..  - x(2,3) + z(2,3) - y(3) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,4)..  - x(2,4) + z(2,4) - y(4) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,5)..  - x(2,5) + z(2,5) - y(5) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,6)..  - x(2,6) + z(2,6) - y(6) =G= -1 ; (LHS = 0)
     
lin_iav_3(2,7)..  - x(2,7) + z(2,7) - y(7) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,1)..  - x(3,1) + z(3,1) - y(1) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,2)..  - x(3,2) + z(3,2) - y(2) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,3)..  - x(3,3) + z(3,3) - y(3) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,4)..  - x(3,4) + z(3,4) - y(4) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,5)..  - x(3,5) + z(3,5) - y(5) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,6)..  - x(3,6) + z(3,6) - y(6) =G= -1 ; (LHS = 0)
     
lin_iav_3(3,7)..  - x(3,7) + z(3,7) - y(7) =G= -1 ; (LHS = 0)
     

---- eq_det  =E=  determinant computation - D-optimality

eq_det..  - (100000)*lm(1,1) - (100000)*lm(2,2) - (100000)*lm(3,3) + detA =E= 0
      ; (LHS = 34.5387763949107, INFES = 34.5387763949107 ****)
     
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows 06/13/19 10:48:32 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE D_opt Using MINLP From line 225


MODEL STATISTICS

BLOCKS OF EQUATIONS          19     SINGLE EQUATIONS          134
BLOCKS OF VARIABLES           7     SINGLE VARIABLES           89  3 projected
NON ZERO ELEMENTS           487     NON LINEAR N-Z            201
DERIVATIVE POOL              20     CONSTANT POOL              17
CODE LENGTH                 424     DISCRETE VARIABLES          7


GENERATION TIME      =        0.015 SECONDS
      4 MB  25.1.3 r4e34d435fbd WEX-WEI


EXECUTION TIME       =        0.015 SECONDS
      4 MB  25.1.3 r4e34d435fbd WEX-WEI
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows 06/13/19 10:48:32 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE D_opt Using MINLP From line 225


               S O L V E      S U M M A R Y

     MODEL   D_opt               OBJECTIVE  detA
     TYPE    MINLP               DIRECTION  MAXIMIZE
     SOLVER  SCIP                FROM LINE  225

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      8 Integer Solution          
**** OBJECTIVE VALUE               -1.8203

 RESOURCE USAGE, LIMIT          1.000     14400.000
 ITERATION COUNT, LIMIT      5635    2000000000
 EVALUATION ERRORS              0          1000

SCIP             25.1.3 r4e34d435fbd Released Oct 30, 2018 WEI x86 64bit/MS Wi

---- EQU vec_fim1  parameter column

     LOWER     LEVEL     UPPER

1      .         .         .         
2      .         .         .         
3      .         .         .         
4      .         .         .         
5      .         .         .         
6      .         .         .         
7      .         .         .         

---- EQU vec_fim2  parameter column

     LOWER     LEVEL     UPPER

1      .         .         .         
2      .         .         .         
3      .         .         .         
4      .         .         .         
5      .         .         .         
6      .         .         .         
7      .         .         .         

---- EQU vec_fim3  parameter column

     LOWER     LEVEL     UPPER

1      .         .         .         
2      .         .         .         
3      .         .         .         
4      .         .         .         
5      .         .         .         
6      .         .         .         
7      .         .         .         

---- EQU ord_x  ordering of the proportions of the ingredients

     LOWER     LEVEL     UPPER

2      .         .        +INF       
3      .         .        +INF       
4      .         .        +INF       
5      .         .        +INF       
6      .         .        +INF       
7      .        1.000     +INF       

                       LOWER     LEVEL     UPPER

---- EQU est_model1     1.000     1.000     1.000      
---- EQU est_model2     1.000     1.000     1.000      
---- EQU est_model3     1.000     1.000     1.000      

  est_model1  model must be estimable
  est_model2  model must be estimable
  est_model3  model must be estimable

---- EQU mat_fim  terms of the FIM after summing

       LOWER     LEVEL     UPPER

1.1      .         .         .         
1.2      .    -2.256E-8      .         
1.3      .         .         .         
2.1      .    -2.256E-8      .         
2.2      .         .         .         
2.3      .         .         .         
3.1      .         .         .         
3.2      .         .         .         
3.3      .         .         .         

---- EQU symm_fim  Symmetry of the FIM

       LOWER     LEVEL     UPPER

1.2      .         .         .         
1.3      .         .         .         
2.3      .         .         .         

---- EQU eq_l  terms of L matrix

       LOWER     LEVEL     UPPER

1.1      .    -5.545E-8      .         
2.1      .    -4.235E-8      .         
2.2      .    -4.040E-7      .         
3.1      .    -2.097E-8      .         
3.2      .    7.2872E-7      .         
3.3      .    -8.492E-8      .         

---- EQU eq_u1  terms of L matrix =0

       LOWER     LEVEL     UPPER

1.2      .         .         .         
1.3      .         .         .         
2.3      .         .         .         

---- EQU chol_sta  Cholesky factorization stability criteria

       LOWER     LEVEL     UPPER

1.1      .        0.143     +INF       
2.2      .        0.429     +INF       
3.3      .        0.429     +INF       

---- EQU ing_avail  ingredient availability constraints

     LOWER     LEVEL     UPPER

1     -INF      1.000     1.500      
2     -INF      3.000     3.000      
3     -INF      3.000     3.000      

---- EQU ord_nw  ordering points constraint

     LOWER     LEVEL     UPPER

2     -INF       .         .         
3     -INF       .         .         
4     -INF       .         .         
5     -INF       .         .         
6     -INF       .         .         
7     -INF       .         .         

---- EQU const_mixt  constraints on mixtures

     LOWER     LEVEL     UPPER

1     1.000     1.000     1.000      
2     1.000     1.000     1.000      
3     1.000     1.000     1.000      
4     1.000     1.000     1.000      
5     1.000     1.000     1.000      
6     1.000     1.000     1.000      
7     1.000     1.000     1.000      

---- EQU lin_iav_1  linearization of ingredient availability const.

       LOWER     LEVEL     UPPER

1.1     -INF     -1.000      .         
1.2     -INF     -1.000      .         
1.3     -INF     -1.000      .         
1.4     -INF     -1.000      .         
1.5     -INF     -1.000      .         
1.6     -INF     -1.000      .         
1.7     -INF       .         .         
2.1     -INF     -1.000      .         
2.2     -INF     -1.000      .         
2.3     -INF       .         .         
2.4     -INF     -1.000      .         
2.5     -INF       .         .         
2.6     -INF       .         .         
2.7     -INF     -1.000      .         
3.1     -INF       .         .         
3.2     -INF       .         .         
3.3     -INF     -1.000      .         
3.4     -INF       .         .         
3.5     -INF     -1.000      .         
3.6     -INF     -1.000      .         
3.7     -INF     -1.000      .         

---- EQU lin_iav_2  

       LOWER     LEVEL     UPPER

1.1     -INF       .         .         
1.2     -INF       .         .         
1.3     -INF       .         .         
1.4     -INF       .         .         
1.5     -INF       .         .         
1.6     -INF       .         .         
1.7     -INF       .         .         
2.1     -INF       .         .         
2.2     -INF       .         .         
2.3     -INF       .         .         
2.4     -INF       .         .         
2.5     -INF       .         .         
2.6     -INF       .         .         
2.7     -INF       .         .         
3.1     -INF       .         .         
3.2     -INF       .         .         
3.3     -INF       .         .         
3.4     -INF       .         .         
3.5     -INF       .         .         
3.6     -INF       .         .         
3.7     -INF       .         .         

---- EQU lin_iav_3  

       LOWER     LEVEL     UPPER

1.1    -1.000    -1.000     +INF       
1.2    -1.000    -1.000     +INF       
1.3    -1.000    -1.000     +INF       
1.4    -1.000    -1.000     +INF       
1.5    -1.000    -1.000     +INF       
1.6    -1.000    -1.000     +INF       
1.7    -1.000    -1.000     +INF       
2.1    -1.000    -1.000     +INF       
2.2    -1.000    -1.000     +INF       
2.3    -1.000    -1.000     +INF       
2.4    -1.000    -1.000     +INF       
2.5    -1.000    -1.000     +INF       
2.6    -1.000    -1.000     +INF       
2.7    -1.000    -1.000     +INF       
3.1    -1.000    -1.000     +INF       
3.2    -1.000    -1.000     +INF       
3.3    -1.000    -1.000     +INF       
3.4    -1.000    -1.000     +INF       
3.5    -1.000    -1.000     +INF       
3.6    -1.000    -1.000     +INF       
3.7    -1.000    -1.000     +INF       

                       LOWER     LEVEL     UPPER

---- EQU eq_det          .    9.1246E-7      .         

  eq_det  determinant computation - D-optimality

---- VAR x  variable x - positions of the design points

       LOWER     LEVEL     UPPER

1.1      .         .        1.000      
1.2      .         .        1.000      
1.3      .         .        1.000      
1.4      .         .        1.000      
1.5      .         .        1.000      
1.6      .         .        1.000      
1.7      .        1.000     1.000      
2.1      .         .        1.000      
2.2      .         .        1.000      
2.3      .        1.000     1.000      
2.4      .         .        1.000      
2.5      .        1.000     1.000      
2.6      .        1.000     1.000      
2.7      .         .        1.000      
3.1      .        1.000     1.000      
3.2      .        1.000     1.000      
3.3      .         .        1.000      
3.4      .        1.000     1.000      
3.5      .         .        1.000      
3.6      .         .        1.000      
3.7      .         .        1.000      

---- VAR dif_th  model matrix columns

       LOWER     LEVEL     UPPER

1.1    -0.100      .        1.100      
1.2    -0.100      .        1.100      
1.3    -0.100      .        1.100      
1.4    -0.100      .        1.100      
1.5    -0.100      .        1.100      
1.6    -0.100      .        1.100      
1.7    -0.100     1.000     1.100      
2.1    -0.100      .        1.100      
2.2    -0.100      .        1.100      
2.3    -0.100     1.000     1.100      
2.4    -0.100      .        1.100      
2.5    -0.100     1.000     1.100      
2.6    -0.100     1.000     1.100      
2.7    -0.100      .        1.100      
3.1    -0.100     1.000     1.100      
3.2    -0.100     1.000     1.100      
3.3    -0.100      .        1.100      
3.4    -0.100     1.000     1.100      
3.5    -0.100      .        1.100      
3.6    -0.100      .        1.100      
3.7    -0.100      .        1.100      

---- VAR fim_th  Fisher Information Matrix (FIM)

       LOWER     LEVEL     UPPER

1.1    -0.100     0.143     1.100      
1.2    -0.100 -2.256E-8     1.100      
1.3    -0.100      .        1.100      
2.1    -0.100 -2.256E-8     1.100      
2.2    -0.100     0.429     1.100      
2.3    -0.100      .        1.100      
3.1    -0.100      .        1.100      
3.2    -0.100      .        1.100      
3.3    -0.100     0.429     1.100      

---- VAR lm  matrix L, for Cholesky decomposition

       LOWER     LEVEL     UPPER

1.1 1.0000E-5     0.378     1.000      
1.2    -1.000      .        1.000      
1.3    -1.000      .        1.000      
2.1    -1.000 5.2384E-8     1.000      
2.2 1.0000E-5     0.655     1.000      
2.3    -1.000      .        1.000      
3.1    -1.000 5.5472E-8     1.000      
3.2    -1.000 -1.113E-6     1.000      
3.3 1.0000E-5     0.655     1.000      

                       LOWER     LEVEL     UPPER

---- VAR detA         -50.000    -1.820    50.000      

  detA  determinant

---- VAR z  variable z - products of binary and continuous variables

       LOWER     LEVEL     UPPER

1.1      .         .        1.000      
1.2      .         .        1.000      
1.3      .         .        1.000      
1.4      .         .        1.000      
1.5      .         .        1.000      
1.6      .         .        1.000      
1.7      .        1.000     1.000      
2.1      .         .        1.000      
2.2      .         .        1.000      
2.3      .        1.000     1.000      
2.4      .         .        1.000      
2.5      .        1.000     1.000      
2.6      .        1.000     1.000      
2.7      .         .        1.000      
3.1      .        1.000     1.000      
3.2      .        1.000     1.000      
3.3      .         .        1.000      
3.4      .        1.000     1.000      
3.5      .         .        1.000      
3.6      .         .        1.000      
3.7      .         .        1.000      

---- VAR y  variables y - decision of including design point or not

     LOWER     LEVEL     UPPER

1      .        1.000     1.000      
2      .        1.000     1.000      
3      .        1.000     1.000      
4      .        1.000     1.000      
5      .        1.000     1.000      
6      .        1.000     1.000      
7      .        1.000     1.000      


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                            13  PROJECTED
GAMS 25.1.3  r4e34d435fbd Released Oct 30, 2018 WEX-WEI x86 64bit/MS Windows 06/13/19 10:48:32 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =        0.000 SECONDS
      3 MB  25.1.3 r4e34d435fbd WEX-WEI


USER: GAMS Development Corporation, USA              G871201/0000CA-ANY
      Free Demo, +1 202-342-0180, support@gams.com, www.gams.com DC0000


**** FILE SUMMARY

Input      C:\Users\AVazquezAlcocer.AD\Dropbox\SDP for Constructing Designs\MINL
           _PROBLEMS\Mixture\Lineariation_constraint\Doptimal Project\First-Orde
           r\Scenario311\Doptimal_MINLP.gms
Output     C:\Users\AVazquezAlcocer.AD\Dropbox\SDP for Constructing Designs\MINL
           _PROBLEMS\Mixture\Lineariation_constraint\Doptimal Project\First-Orde
           r\Scenario311\Doptimal_MINLP.lst
